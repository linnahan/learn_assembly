程序由程序设计语言编写，由指令构成
指令由操作码和操作数（地址码）组成
	操作码（Opcode）表明处理器执行的操作
	操作数（Operand）是参与操作的数据对象
指令的一般格式：（IA-32处理器采用可变长度指令格式）
     操作码    +       操作数
指令前缀+操作码+Mod R/M+SIB+位移量+立即数
0~4字节 1~3字节   0或1字节  0/1/2/4 0/1/2/4
指令前缀：用于扩展指令功能
包括ModR/M和SIB字段：可选的寻址方式域


使用最多、最基本的数据传送指令
	传送指令的助记符：MOV（取自Move）
		mov dest,src
		源操作数src
		目的操作数dest
demo：
mov eax,100      （常量）
mov eax,dvar     （变量）
mov eax,ebx      （寄存器）



汇编语言语句
一个语句不超过132个字符，4个部分
	执行性语句：表达处理器指令，实现功能
	标号： 硬指令助记符  操作数,操作数  ;注释
	说明性语句：表达伪指令，控制汇编方式
	名字   伪指令助记符  参数,参数,...  ;注释
标号和名字是用户定义的标识符（Identifier）：默认不区分大小写字母
助记符是帮助记忆指令功能的符号
	硬指令助记符表示处理器指令
		demo：mov eax,offset msg	;EAX获得msg的偏移地址
	伪指令助记符表示汇编命令
		demo：msg byte 'Hello,Assembly!',13,10,0	;定义字符串
处理器指令的操作数：表示参与操作的对象